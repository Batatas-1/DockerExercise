volumes:
  prometheus_data: {}

networks:
  monitoring:
    driver: bridge

services:
  heimdall:
    image: lscr.io/linuxserver/heimdall:2.6.3   #Acrescentar ao README.md como Ã© que se cria a imagem e 
    container_name: heimadall   #O container
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Etc/UTC
#    volumes:
#    - /path/to/heimdall/config:/config
    ports:
    - 80:80
    - 443:443
    restart: unless-stopped

  glances:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    - "/run/user/1000/podman/podman.sock:/run/user/1000/podman/podman.sock:ro"
    - "./glances.conf:/glances/conf/glances.conf"
    ports:
    - 8082:8082
    environment:
    - "GLANCES_OPT=-C /glances/conf/glances.conf -w"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 8083
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 8081
    networks:
      - monitoring
